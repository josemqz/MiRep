#lang racket

(define permutaciones
  (lambda (lista)
    (let (lpot '())
      (for-each
        (lambda (x)
          (do (potN '() (eq? (length? (cdr lista)) 2)
              (
               ;Switch
               ;12 3 45
               ;12 3 54
               ;12 5 34
               ;12 5 43
               ;12 4 53
               ;12 4 35
               ;1 4 2 35
               ;1 4 2 53
               ;1 4 5 23
               ;1 4 5 32
               ;1 4 3 52
               ;1 4 3 25
               ;1 3 4 25
               ;1 3 4 52
               ;1 3 5 42
               ;1 3 5 24
               ;1 3 2 54
               ;1 3 2 45
               ;1 2 3 45
               ;2 1 3 45
               ;2 1 3 54
               ;2 1 5 34
               ;2 1 5 43
               ;2 1 4 53
               ;2 1 4 35
               ;2 1 3 45
               ;2 1 3 54
               ;2 3 1 54
               ;2 3 1 45
               ;2 3 4 15
               ;2 3 4 51
               ;2 3 5 41
               ;2 3 5 14
               ;2 3 1
               ;
               ;
               ;
               ;
               ;
               ;;
               ;
               ;;
               ;
               ;
               ;
               ;
               ;;
               ;
               ;
               ;
               ;
               ;
               ;
               ;
               ;
               